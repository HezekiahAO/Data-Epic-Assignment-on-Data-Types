Data Epic Assignment in Data Types.
#we have differnet data tyoes such
Numerics Data Types
    Integers
    Floats
    Complex Numbers
Boolean Data Types  greater than or less than

Sequence Data Types 
    Strings Double and Single  quote.
a = "Hello World"
print (a[:5]) this will print Hello and print([6]) will priint W 


    List.  This stores multiple values
    [1,2,3] or ['bed','valilla' 'cake'] a list can take in different data types
     
    you can also add ann item to a list such as 
    icecream['vanilla', 'orange', 'Strawnberry']
    icecream.append(chocolate)
    priint(icecream)

    result = vanilla', 'orange', 'Strawnberry, chocolate

    also, we can change a value in a list by knowing the location of the value we want to cahnge for example
    icecream[0] = grape
    print (icecream)

    result = grape, 'orange', 'Strawnberry, chocolate

List within a List = Nested List for example  (They are mutable)
    nested_list = ['mango', 3, ['orange','orange'], 6]
    if we say 
    nested_list[2]
    result = 3
    nested_list[3] 
    result = orange orange 
    and finnally,  if we say

    nested_list[3][2]
    result = orange     # the second orange

Turples this are just like list bu"t they can not be changed after there creation like (They are immutable)  cannot be changed     "cusvinvspv a normal idea that happens when tou jusy find out you can code off keyboard"
    Turples_scoops(1,1,2,3,4,4,5,)
    Turples_scoops.append(5)

    result = error

    
#set 
this is almost like a list or turple but they dont have any dupicate index
    for exaxmple, 
    daily = {1, 3, 4}

    it can be used to compare and check for values in one or the other
    | uesd to show all the elements in the 2 set, 
    & is uesd to combine the two set and print out only the unique values leaving out the duplicates
    - is used to subtract a value form another
    ^   is used to check if a value is in one or the other but not in both  ie the unique values that belongs to each set

dictionaries
This one has something that is called a key value Pair
example
dict_cream = {'name' : David}. or dict_cream_two = {'name' : [David, Solomon afeez]}.
The name is the key and David is the Value.  CHeck Screenshot 965 for more examples. the way you use in a programm is by using maps.

ALthough, the way you call a key in dictionaries is different.
You have to call the key example
dict_cream['name'] and the response is David.
    you could also update some a dict by just calling its key and setting it = Ola
    the dict_cream.update can update a dictionary but not remove